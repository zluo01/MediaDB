name: Publish/release

on:
  release:
    types: [published]

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019]

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      - run: npm install

      - name: Build for linux
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux

      - name: Build for windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win64

      - name: Set VERSION variable for macos/ubuntu
        if: matrix.os == 'ubuntu-latest'
        run: |
          echo "VERSION=$(awk -F'"' '/"version": ".+"/{ print $4; exit; }' package.json)" >> $GITHUB_ENV

      - name: Set VERSION variable for windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "VERSION=$(node -pe "require('./package.json').version")" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Upload build artifact for linux
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: MediaDB-${{ env.VERSION }}-${{ runner.os }}-amd64
          path: dist/MediaDB-${{ env.VERSION }}.AppImage

      - name: Upload build artifact for Windows
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: MediaDB-${{ env.VERSION }}-${{ runner.os }}-amd64
          path: dist/win-unpacked/*
